// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/isutare412/bloated/api/pkg/core/port (interfaces: CustomJWTClient,GoogleJWTClient)

// Package portmock is a generated GoMock package.
package portmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/isutare412/bloated/api/pkg/core/model"
)

// MockCustomJWTClient is a mock of CustomJWTClient interface.
type MockCustomJWTClient struct {
	ctrl     *gomock.Controller
	recorder *MockCustomJWTClientMockRecorder
}

// MockCustomJWTClientMockRecorder is the mock recorder for MockCustomJWTClient.
type MockCustomJWTClientMockRecorder struct {
	mock *MockCustomJWTClient
}

// NewMockCustomJWTClient creates a new mock instance.
func NewMockCustomJWTClient(ctrl *gomock.Controller) *MockCustomJWTClient {
	mock := &MockCustomJWTClient{ctrl: ctrl}
	mock.recorder = &MockCustomJWTClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomJWTClient) EXPECT() *MockCustomJWTClientMockRecorder {
	return m.recorder
}

// SignCustomToken mocks base method.
func (m *MockCustomJWTClient) SignCustomToken(arg0 model.CustomToken) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignCustomToken", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignCustomToken indicates an expected call of SignCustomToken.
func (mr *MockCustomJWTClientMockRecorder) SignCustomToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignCustomToken", reflect.TypeOf((*MockCustomJWTClient)(nil).SignCustomToken), arg0)
}

// VerifyCustomToken mocks base method.
func (m *MockCustomJWTClient) VerifyCustomToken(arg0 string) (model.CustomToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyCustomToken", arg0)
	ret0, _ := ret[0].(model.CustomToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyCustomToken indicates an expected call of VerifyCustomToken.
func (mr *MockCustomJWTClientMockRecorder) VerifyCustomToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyCustomToken", reflect.TypeOf((*MockCustomJWTClient)(nil).VerifyCustomToken), arg0)
}

// MockGoogleJWTClient is a mock of GoogleJWTClient interface.
type MockGoogleJWTClient struct {
	ctrl     *gomock.Controller
	recorder *MockGoogleJWTClientMockRecorder
}

// MockGoogleJWTClientMockRecorder is the mock recorder for MockGoogleJWTClient.
type MockGoogleJWTClientMockRecorder struct {
	mock *MockGoogleJWTClient
}

// NewMockGoogleJWTClient creates a new mock instance.
func NewMockGoogleJWTClient(ctrl *gomock.Controller) *MockGoogleJWTClient {
	mock := &MockGoogleJWTClient{ctrl: ctrl}
	mock.recorder = &MockGoogleJWTClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoogleJWTClient) EXPECT() *MockGoogleJWTClientMockRecorder {
	return m.recorder
}

// VerifyGoogleIDToken mocks base method.
func (m *MockGoogleJWTClient) VerifyGoogleIDToken(arg0 string) (model.GoogleIDToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyGoogleIDToken", arg0)
	ret0, _ := ret[0].(model.GoogleIDToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyGoogleIDToken indicates an expected call of VerifyGoogleIDToken.
func (mr *MockGoogleJWTClientMockRecorder) VerifyGoogleIDToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyGoogleIDToken", reflect.TypeOf((*MockGoogleJWTClient)(nil).VerifyGoogleIDToken), arg0)
}
